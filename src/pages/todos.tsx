import Head from "next/head";
import { api } from "~/utils/api";

export default function Todos() {
  const utils = api.useContext();
  const todos = api.todo.list.useQuery();
  const { mutate: createTodo } = api.todo.create.useMutation({
    onSuccess: () => utils.todo.invalidate(),
  });
  const { mutate: completeTodo } = api.todo.complete.useMutation({
    onSuccess: () => utils.todo.invalidate(),
  });
  const { mutate: deleteTodo } = api.todo.delete.useMutation({
    onSuccess: () => utils.todo.invalidate(),
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Todos
          </h1>
          <form
            className="space-x-2"
            onSubmit={(e) => {
              e.preventDefault();
              const data = new FormData(e.target as HTMLFormElement);
              const content = data.get("content");
              if (content && typeof content === "string") {
                createTodo({ content });
                (e.target as HTMLFormElement).reset();
              }
            }}
          >
            <input name="content" />
            <button
              type="submit"
              className="rounded-sm border-black bg-white p-2"
            >
              Add
            </button>
          </form>
          <div className="flex flex-col items-center gap-2">
            {todos.isLoading ? (
              <div className="text-white">Loading...</div>
            ) : (
              <ul>
                {todos.data?.map((todo) => (
                  <li key={todo.id} className="flex justify-between text-white">
                    <span>{todo.content}</span>

                    <input
                      type="checkbox"
                      checked={todo.isCompleted}
                      onClick={() => {
                        if (todo.isCompleted) return;
                        completeTodo({ id: todo.id });
                      }}
                    />
                    <button
                      className="rounded-s border-black bg-white p-2 text-black"
                      type="button"
                      onClick={() => {
                        deleteTodo({ id: todo.id });
                      }}
                    >
                      Delete
                    </button>
                  </li>
                ))}
              </ul>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
